import{_ as s,o as a,c as n,e}from"./app.a667bd71.js";const t={},p=e(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token comment">#\`\`\`ops</span>
<span class="token comment">#title:CPU\u8D1F\u8F7D\u8D85\u8FC790%\u62A5\u8B66</span>
<span class="token comment">#descr:\u5E73\u5747\u8D1F\u8F7D\u76D1\u63A7\uFF0C\u5982\u679C\u8D1F\u8F7D\u4E00\u76F4\u5927\u4E8E\u6216\u63A5\u8FD1\u903B\u8F91CPU\u7684\u4E2A\u6570(\u8FD9\u91CC\u5982\u679C\u5E73\u5747\u8D1F\u8F7D\u572890%\u4EE5\u4E0A)\u5219\u8BF4\u660ECPU\u5F88\u7E41\u5FD9\uFF0C\u8D1F\u8F7D\u5F88\u9AD8\u670D\u52A1\u5668\u6027\u80FD\u4F4E\u4E0B\uFF0C\u8FD9\u4E2A\u65F6\u5019\u8981\u901A\u8FC7vmstat\u67E5\u770B\u5E76\u8003\u8651\u4F18\u5316\u6216\u589E\u5927\u670D\u52A1\u5668\u6027\u80FD</span>
<span class="token comment">#\`\`\`</span>
<span class="token assign-left variable">physical_cpu</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">cat</span> /proc/cpuinfo <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;physical id&quot;</span><span class="token operator">|</span><span class="token function">sort</span><span class="token operator">|</span><span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">\`</span></span>
<span class="token assign-left variable">load_average_15min</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">uptime</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&quot;{print <span class="token variable">$12</span>}&quot;</span><span class="token variable">\`</span></span>
<span class="token builtin class-name">let</span> <span class="token string">&quot;value=load_average_15min/physical_cpu&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$value</span>&gt;=0.9&quot;</span><span class="token operator">|</span><span class="token function">bc</span><span class="token variable">)</span></span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
	<span class="token builtin class-name">echo</span> <span class="token string">&quot;CPU\u8D1F\u8F7D\u8D85\u8FC790%.&quot;</span>
	<span class="token function">mutt</span> <span class="token parameter variable">-s</span> <span class="token string">&quot;CPU\u8D1F\u8F7D\u62A5\u8B66&quot;</span> xxxx@qq.com <span class="token variable"><span class="token variable">\`</span><span class="token function">uptime</span><span class="token variable">\`</span></span>
<span class="token keyword">fi</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),l=[p];function o(c,i){return a(),n("div",null,l)}const u=s(t,[["render",o],["__file","load-average-monitor-sh.html.vue"]]);export{u as default};
