import{_ as s,o as a,c as n,e as p}from"./app.a667bd71.js";const t={},e=p(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#\`\`\`ops</span>
<span class="token comment">#title:Check CPU Usage via /proc/stats</span>
<span class="token comment">#descr:</span>
<span class="token comment">#\`\`\`</span>

<span class="token comment">########################</span>
<span class="token comment"># DECLARATIONS</span>
<span class="token comment">########################</span>

<span class="token assign-left variable">PROGNAME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">basename</span> $0<span class="token variable">\`</span></span>
<span class="token assign-left variable">REVISION</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> <span class="token string">&#39;$Revision: 1.0 $&#39;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/[^0-9.]//g&#39;</span><span class="token variable">\`</span></span>

<span class="token assign-left variable">DEBUG</span><span class="token operator">=</span><span class="token number">0</span>

<span class="token assign-left variable">exitstatus</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
<span class="token assign-left variable">perfdata</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
<span class="token assign-left variable">scale</span><span class="token operator">=</span><span class="token number">2</span>
<span class="token assign-left variable">show_all</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">warning</span><span class="token operator">=</span><span class="token number">999</span>
<span class="token assign-left variable">critical</span><span class="token operator">=</span><span class="token number">999</span>

<span class="token assign-left variable">TMPFILE</span><span class="token operator">=</span><span class="token string">&quot;/tmp/check_cpu.tmp&quot;</span>

status<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;OK: &quot;</span>
status<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;WARNING: &quot;</span>
status<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;CRITICAL: &quot;</span>
status<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;UNKNOWN: &quot;</span>

<span class="token comment">########################</span>
<span class="token comment"># FUNCTIONS</span>
<span class="token comment">########################</span>

<span class="token function-name function">print_usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Usage: <span class="token variable">$PROGNAME</span> [options]&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;  e.g. <span class="token variable">$PROGNAME</span> -w 75 -c 90 -s 2 --all&quot;</span>
  <span class="token builtin class-name">echo</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Options:&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span> --help    | -h       print help&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span> --version | -V       print version&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span> --verbose | -v       be verbose (debug mode)&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span> --scale   | -s [int] decimal precision of results&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span>                        default=2&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span> --all     | -a       return values for all cpus individually&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span>                        default= summary data only&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span> -w [int]             set warning value&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span> -c [int]             set critical value&quot;</span>
  <span class="token builtin class-name">echo</span>
  <span class="token builtin class-name">echo</span>
<span class="token punctuation">}</span>

<span class="token function-name function">print_help</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">#  print_revision $PROGNAME $REVISION</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${PROGNAME}</span> Revision: <span class="token variable">\${REVISION}</span>&quot;</span>
  <span class="token builtin class-name">echo</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;This plugin checks local cpu usage using /proc/stat&quot;</span>
  <span class="token builtin class-name">echo</span>
  print_usage
  <span class="token builtin class-name">echo</span>
<span class="token comment"># support</span>
  <span class="token builtin class-name">exit</span> <span class="token number">3</span>
<span class="token punctuation">}</span>

<span class="token function-name function">parse_options</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment"># parse cmdline arguments</span>
  <span class="token variable"><span class="token punctuation">((</span> DEBUG <span class="token punctuation">))</span></span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;Parsing options <span class="token variable">$1</span> <span class="token variable">$2</span> <span class="token variable">$3</span> <span class="token variable">$4</span> <span class="token variable">$5</span> <span class="token variable">$6</span> <span class="token variable">$7</span> <span class="token variable">$8</span>&quot;</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$#</span>&quot;</span> <span class="token parameter variable">-gt</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$#</span>&quot;</span> <span class="token parameter variable">-gt</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
      <span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token keyword">in</span>
        <span class="token string">&#39;--help&#39;</span><span class="token operator">|</span><span class="token string">&#39;-h&#39;</span><span class="token punctuation">)</span>
          print_help
          <span class="token builtin class-name">exit</span> <span class="token number">3</span>
          <span class="token punctuation">;</span><span class="token punctuation">;</span>
        <span class="token string">&#39;--version&#39;</span><span class="token operator">|</span><span class="token string">&#39;-V&#39;</span><span class="token punctuation">)</span>
          <span class="token comment">#print_revision $PROGNAME $REVISION</span>
          <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${PROGNAME}</span> Revision: <span class="token variable">\${REVISION}</span>&quot;</span>
          <span class="token builtin class-name">exit</span> <span class="token number">3</span>
          <span class="token punctuation">;</span><span class="token punctuation">;</span>
        <span class="token string">&#39;--verbose&#39;</span><span class="token operator">|</span><span class="token string">&#39;-v&#39;</span><span class="token punctuation">)</span>
          <span class="token assign-left variable">DEBUG</span><span class="token operator">=</span><span class="token number">1</span>
          <span class="token builtin class-name">shift</span> <span class="token number">1</span>
          <span class="token punctuation">;</span><span class="token punctuation">;</span>
        <span class="token string">&#39;--scale&#39;</span><span class="token operator">|</span><span class="token string">&#39;-s&#39;</span><span class="token punctuation">)</span>
          <span class="token assign-left variable">scale</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$2</span>&quot;</span>
          <span class="token builtin class-name">shift</span> <span class="token number">2</span>
          <span class="token punctuation">;</span><span class="token punctuation">;</span>
        <span class="token string">&#39;--all&#39;</span><span class="token operator">|</span><span class="token string">&#39;-a&#39;</span><span class="token punctuation">)</span>
          <span class="token assign-left variable">show_all</span><span class="token operator">=</span><span class="token number">1</span>
          <span class="token builtin class-name">shift</span> <span class="token number">1</span>
          <span class="token punctuation">;</span><span class="token punctuation">;</span>
        <span class="token string">&#39;-c&#39;</span><span class="token punctuation">)</span>
          <span class="token assign-left variable">critical</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$2</span>&quot;</span>
          <span class="token builtin class-name">shift</span> <span class="token number">2</span>
          <span class="token punctuation">;</span><span class="token punctuation">;</span>
        <span class="token string">&#39;-w&#39;</span><span class="token punctuation">)</span>
          <span class="token assign-left variable">warning</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$2</span>&quot;</span>
          <span class="token builtin class-name">shift</span> <span class="token number">2</span>
          <span class="token punctuation">;</span><span class="token punctuation">;</span>
        *<span class="token punctuation">)</span>
          <span class="token builtin class-name">echo</span> <span class="token string">&quot;Unknown option!&quot;</span>
          print_usage
          <span class="token builtin class-name">exit</span> <span class="token number">3</span>
          <span class="token punctuation">;</span><span class="token punctuation">;</span>
      <span class="token keyword">esac</span>
    <span class="token keyword">done</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token function-name function">write_tmpfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;old_date=<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>&quot;</span> <span class="token operator">&gt;</span> <span class="token variable">\${TMPFILE}</span>
  <span class="token keyword">for</span> <span class="token for-or-select variable">a</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> <span class="token number">0</span> <span class="token number">1</span> $<span class="token punctuation">{</span>cpucount<span class="token punctuation">}</span> <span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;old_system[<span class="token variable">\${a}</span>]=<span class="token variable">\${system<span class="token punctuation">[</span>\${a}</span>]}&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${TMPFILE}</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;old_user[<span class="token variable">\${a}</span>]=<span class="token variable">\${user<span class="token punctuation">[</span>\${a}</span>]}&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${TMPFILE}</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;old_nice[<span class="token variable">\${a}</span>]=<span class="token variable">\${nice<span class="token punctuation">[</span>\${a}</span>]}&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${TMPFILE}</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;old_iowait[<span class="token variable">\${a}</span>]=<span class="token variable">\${iowait<span class="token punctuation">[</span>\${a}</span>]}&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${TMPFILE}</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;old_irq[<span class="token variable">\${a}</span>]=<span class="token variable">\${irq<span class="token punctuation">[</span>\${a}</span>]}&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${TMPFILE}</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;old_softirq[<span class="token variable">\${a}</span>]=<span class="token variable">\${softirq<span class="token punctuation">[</span>\${a}</span>]}&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${TMPFILE}</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;old_idle[<span class="token variable">\${a}</span>]=<span class="token variable">\${idle<span class="token punctuation">[</span>\${a}</span>]}&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${TMPFILE}</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;old_used[<span class="token variable">\${a}</span>]=<span class="token variable">\${used<span class="token punctuation">[</span>\${a}</span>]}&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${TMPFILE}</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;old_total[<span class="token variable">\${a}</span>]=<span class="token variable">\${total<span class="token punctuation">[</span>\${a}</span>]}&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${TMPFILE}</span>
  <span class="token keyword">done</span>
<span class="token punctuation">}</span>

<span class="token function-name function">read_tmpfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-e</span> <span class="token variable">\${TMPFILE}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">source</span> <span class="token variable">\${TMPFILE}</span>			<span class="token comment"># include the vars from the tmp file</span>
  <span class="token keyword">fi</span>
  <span class="token variable"><span class="token punctuation">((</span> DEBUG <span class="token punctuation">))</span></span> <span class="token operator">&amp;&amp;</span> <span class="token function">cat</span> <span class="token variable">\${TMPFILE}</span>
<span class="token punctuation">}</span>

<span class="token comment">########################</span>
<span class="token comment"># MAIN</span>
<span class="token comment">########################</span>

parse_options <span class="token variable">$@</span>

read_tmpfile

<span class="token assign-left variable">procstat</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/stat <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token variable">)</span></span>
 <span class="token variable"><span class="token punctuation">((</span> DEBUG <span class="token punctuation">))</span></span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$procstat</span>&quot;</span>
<span class="token assign-left variable">cpucount</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> $<span class="token punctuation">(</span>grep <span class="token operator">-</span>i cpu <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span> &quot;\${procstat}&quot; <span class="token operator">|</span> tail <span class="token operator">-</span>n <span class="token number">1</span> <span class="token operator">|</span> cut <span class="token operator">-</span>d&#39; &#39; <span class="token operator">-</span>f <span class="token number">1</span> <span class="token operator">|</span> grep <span class="token operator">-</span>Eo [<span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span>]<span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token variable">))</span></span>
  <span class="token variable"><span class="token punctuation">((</span> DEBUG <span class="token punctuation">))</span></span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;cpucount=<span class="token variable">\${cpucount}</span>&quot;</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">a</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> <span class="token number">0</span> <span class="token number">1</span> $<span class="token punctuation">{</span>cpucount<span class="token punctuation">}</span> <span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$a</span> <span class="token parameter variable">-eq</span> <span class="token variable">\${cpucount}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    cpu<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;<span class="token variable">\${procstat}</span>&quot;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;s/  / /g&#39;</span><span class="token variable">)</span></span>
  <span class="token keyword">else</span>
    cpu<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> cpu$<span class="token punctuation">{</span>a<span class="token punctuation">}</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;<span class="token variable">\${procstat}</span>&quot;</span><span class="token variable">)</span></span>
  <span class="token keyword">fi</span>
  user<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cut</span> -d<span class="token string">&#39; &#39;</span> <span class="token parameter variable">-f</span> <span class="token number">2</span> <span class="token operator">&lt;&lt;&lt;</span> $<span class="token punctuation">{</span>cpu<span class="token punctuation">[</span>$a<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token variable">)</span></span>
  nice<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cut</span> -d<span class="token string">&#39; &#39;</span> <span class="token parameter variable">-f</span> <span class="token number">3</span> <span class="token operator">&lt;&lt;&lt;</span> $<span class="token punctuation">{</span>cpu<span class="token punctuation">[</span>$a<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token variable">)</span></span>
  system<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cut</span> -d<span class="token string">&#39; &#39;</span> <span class="token parameter variable">-f</span> <span class="token number">4</span> <span class="token operator">&lt;&lt;&lt;</span> $<span class="token punctuation">{</span>cpu<span class="token punctuation">[</span>$a<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token variable">)</span></span>
  idle<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cut</span> -d<span class="token string">&#39; &#39;</span> <span class="token parameter variable">-f</span> <span class="token number">5</span> <span class="token operator">&lt;&lt;&lt;</span> $<span class="token punctuation">{</span>cpu<span class="token punctuation">[</span>$a<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token variable">)</span></span>
  iowait<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cut</span> -d<span class="token string">&#39; &#39;</span> <span class="token parameter variable">-f</span> <span class="token number">6</span> <span class="token operator">&lt;&lt;&lt;</span> $<span class="token punctuation">{</span>cpu<span class="token punctuation">[</span>$a<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token variable">)</span></span>
  irq<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cut</span> -d<span class="token string">&#39; &#39;</span> <span class="token parameter variable">-f</span> <span class="token number">7</span> <span class="token operator">&lt;&lt;&lt;</span> $<span class="token punctuation">{</span>cpu<span class="token punctuation">[</span>$a<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token variable">)</span></span>
  softirq<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cut</span> -d<span class="token string">&#39; &#39;</span> <span class="token parameter variable">-f</span> <span class="token number">8</span> <span class="token operator">&lt;&lt;&lt;</span> $<span class="token punctuation">{</span>cpu<span class="token punctuation">[</span>$a<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token variable">)</span></span>
  used<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span> \${user[$a]} <span class="token operator">+</span> \${nice[$a]} <span class="token operator">+</span> \${system[$a]} <span class="token operator">+</span> \${iowait[$a]} <span class="token operator">+</span> \${irq[$a]} <span class="token operator">+</span> \${softirq[$a]} <span class="token variable">))</span></span><span class="token punctuation">)</span>
  total<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span> \${user[$a]} <span class="token operator">+</span> \${nice[$a]} <span class="token operator">+</span> \${system[$a]} <span class="token operator">+</span> \${idle[$a]} <span class="token operator">+</span> \${iowait[$a]} <span class="token operator">+</span> \${irq[$a]} <span class="token operator">+</span> \${softirq[$a]} <span class="token variable">))</span></span><span class="token punctuation">)</span>

  <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">\${old_user<span class="token punctuation">[</span>\${a}</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> old_user<span class="token punctuation">[</span><span class="token variable">\${a}</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
  <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">\${old_nice<span class="token punctuation">[</span>\${a}</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> old_nice<span class="token punctuation">[</span><span class="token variable">\${a}</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
  <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">\${old_system<span class="token punctuation">[</span>\${a}</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> old_system<span class="token punctuation">[</span><span class="token variable">\${a}</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
  <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">\${old_idle<span class="token punctuation">[</span>\${a}</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> old_idle<span class="token punctuation">[</span><span class="token variable">\${a}</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
  <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">\${old_iowait<span class="token punctuation">[</span>\${a}</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> old_iowait<span class="token punctuation">[</span><span class="token variable">\${a}</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
  <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">\${old_irq<span class="token punctuation">[</span>\${a}</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> old_irq<span class="token punctuation">[</span><span class="token variable">\${a}</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
  <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">\${old_softirq<span class="token punctuation">[</span>\${a}</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> old_softirq<span class="token punctuation">[</span><span class="token variable">\${a}</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
  <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">\${old_used<span class="token punctuation">[</span>\${a}</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> old_used<span class="token punctuation">[</span><span class="token variable">\${a}</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
  <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">\${old_total<span class="token punctuation">[</span>\${a}</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> old_total<span class="token punctuation">[</span><span class="token variable">\${a}</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>

  diff_user<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span>\${user[$a]}<span class="token operator">-</span>\${old_user[\${a}]}<span class="token variable">))</span></span><span class="token punctuation">)</span>
  diff_nice<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span>\${nice[$a]}<span class="token operator">-</span>\${old_nice[\${a}]}<span class="token variable">))</span></span><span class="token punctuation">)</span>
  diff_system<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span>\${system[$a]}<span class="token operator">-</span>\${old_system[\${a}]}<span class="token variable">))</span></span><span class="token punctuation">)</span>
  diff_idle<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span>\${idle[$a]}<span class="token operator">-</span>\${old_idle[\${a}]}<span class="token variable">))</span></span><span class="token punctuation">)</span>
  diff_iowait<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span>\${iowait[$a]}<span class="token operator">-</span>\${old_iowait[\${a}]}<span class="token variable">))</span></span><span class="token punctuation">)</span>
  diff_irq<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span>\${irq[$a]}<span class="token operator">-</span>\${old_irq[\${a}]}<span class="token variable">))</span></span><span class="token punctuation">)</span>
  diff_softirq<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span>\${softirq[$a]}<span class="token operator">-</span>\${old_softirq[\${a}]}<span class="token variable">))</span></span><span class="token punctuation">)</span>
  diff_used<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span>\${used[$a]}<span class="token operator">-</span>\${old_used[\${a}]}<span class="token variable">))</span></span><span class="token punctuation">)</span>
  diff_total<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token punctuation">(</span>\${total[$a]}<span class="token operator">-</span>\${old_total[\${a}]}<span class="token variable">))</span></span><span class="token punctuation">)</span>
 
  pct_user<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">bc</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;scale=<span class="token variable">\${scale}</span>;<span class="token variable">\${diff_user<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>*100/<span class="token variable">\${diff_total<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>&quot;</span><span class="token variable">)</span></span>
  pct_nice<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">bc</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;scale=<span class="token variable">\${scale}</span>;<span class="token variable">\${diff_nice<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>*100/<span class="token variable">\${diff_total<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>&quot;</span><span class="token variable">)</span></span>
  pct_system<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">bc</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;scale=<span class="token variable">\${scale}</span>;<span class="token variable">\${diff_system<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>*100/<span class="token variable">\${diff_total<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>&quot;</span><span class="token variable">)</span></span>
  pct_idle<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">bc</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;scale=<span class="token variable">\${scale}</span>;<span class="token variable">\${diff_idle<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>*100/<span class="token variable">\${diff_total<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>&quot;</span><span class="token variable">)</span></span>
  pct_iowait<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">bc</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;scale=<span class="token variable">\${scale}</span>;<span class="token variable">\${diff_iowait<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>*100/<span class="token variable">\${diff_total<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>&quot;</span><span class="token variable">)</span></span>
  pct_irq<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">bc</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;scale=<span class="token variable">\${scale}</span>;<span class="token variable">\${diff_irq<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>*100/<span class="token variable">\${diff_total<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>&quot;</span><span class="token variable">)</span></span>
  pct_softirq<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">bc</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;scale=<span class="token variable">\${scale}</span>;<span class="token variable">\${diff_softirq<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>*100/<span class="token variable">\${diff_total<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>&quot;</span><span class="token variable">)</span></span>
  pct_used<span class="token punctuation">[</span><span class="token variable">$a</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">bc</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;scale=<span class="token variable">\${scale}</span>;<span class="token variable">\${diff_used<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>*100/<span class="token variable">\${diff_total<span class="token punctuation">[</span>$a<span class="token punctuation">]</span>}</span>&quot;</span><span class="token variable">)</span></span>
<span class="token keyword">done</span>

write_tmpfile

<span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;&lt;</span> $<span class="token punctuation">{</span>pct_used<span class="token punctuation">[</span>$<span class="token punctuation">{</span>cpucount<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token variable">)</span></span> <span class="token parameter variable">-ge</span> <span class="token variable">\${warning}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token assign-left variable">exitstatus</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;&lt;</span> $<span class="token punctuation">{</span>pct_used<span class="token punctuation">[</span>$<span class="token punctuation">{</span>cpucount<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token variable">)</span></span> <span class="token parameter variable">-ge</span> <span class="token variable">\${critical}</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token assign-left variable">exitstatus</span><span class="token operator">=</span><span class="token number">2</span>

<span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token string">&quot;CPU=<span class="token variable">\${pct_used<span class="token punctuation">[</span>\${cpucount}</span>]}&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$show_all</span> <span class="token parameter variable">-gt</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token keyword">for</span> <span class="token for-or-select variable">a</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token punctuation">$((</span><span class="token punctuation">(</span>$<span class="token punctuation">{</span>cpucount<span class="token punctuation">}</span> - <span class="token number">1</span><span class="token punctuation">)</span><span class="token variable">)</span></span><span class="token punctuation">))</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${result}</span>, CPU<span class="token variable">\${a}</span>=<span class="token variable">\${pct_used<span class="token punctuation">[</span>\${a}</span>]}&quot;</span>
  <span class="token keyword">done</span>
<span class="token keyword">fi</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">\${warning}</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;999&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token assign-left variable">warning</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
<span class="token keyword">fi</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">\${critical}</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;999&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token assign-left variable">critical</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
<span class="token keyword">fi</span>

<span class="token assign-left variable">perfdata</span><span class="token operator">=</span><span class="token string">&quot;used=<span class="token variable">\${pct_used<span class="token punctuation">[</span>\${cpucount}</span>]};<span class="token variable">\${warning}</span>;<span class="token variable">\${critical}</span>;; system=<span class="token variable">\${pct_system<span class="token punctuation">[</span>\${cpucount}</span>]};;;; user=<span class="token variable">\${pct_user<span class="token punctuation">[</span>\${cpucount}</span>]};;;; nice=<span class="token variable">\${pct_nice<span class="token punctuation">[</span>\${cpucount}</span>]};;;; iowait=<span class="token variable">\${pct_iowait<span class="token punctuation">[</span>\${cpucount}</span>]};;;; irq=<span class="token variable">\${pct_irq<span class="token punctuation">[</span>\${cpucount}</span>]};;;; softirq=<span class="token variable">\${pct_softirq<span class="token punctuation">[</span>\${cpucount}</span>]};;;;&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$show_all</span> <span class="token parameter variable">-gt</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token keyword">for</span> <span class="token for-or-select variable">a</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token punctuation">$((</span><span class="token punctuation">(</span>$<span class="token punctuation">{</span>cpucount<span class="token punctuation">}</span> - <span class="token number">1</span><span class="token punctuation">)</span><span class="token variable">)</span></span><span class="token punctuation">))</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">perfdata</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${perfdata}</span> used<span class="token variable">\${a}</span>=<span class="token variable">\${pct_used<span class="token punctuation">[</span>\${a}</span>]};;;; system<span class="token variable">\${a}</span>=<span class="token variable">\${pct_system<span class="token punctuation">[</span>\${a}</span>]};;;; user<span class="token variable">\${a}</span>=<span class="token variable">\${pct_user<span class="token punctuation">[</span>\${a}</span>]};;;; nice<span class="token variable">\${a}</span>=<span class="token variable">\${pct_nice<span class="token punctuation">[</span>\${a}</span>]};;;; iowait<span class="token variable">\${a}</span>=<span class="token variable">\${pct_iowait<span class="token punctuation">[</span>\${a}</span>]};;;; irq<span class="token variable">\${a}</span>=<span class="token variable">\${pct_irq<span class="token punctuation">[</span>\${a}</span>]};;;; softirq<span class="token variable">\${a}</span>=<span class="token variable">\${pct_softirq<span class="token punctuation">[</span>\${a}</span>]};;;;&quot;</span>
  <span class="token keyword">done</span>
<span class="token keyword">fi</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${status<span class="token punctuation">[</span>$exitstatus<span class="token punctuation">]</span>}</span><span class="token variable">\${result}</span> | <span class="token variable">\${perfdata}</span>&quot;</span>
<span class="token builtin class-name">exit</span> <span class="token variable">$exitstatus</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),l=[e];function o(c,i){return a(),n("div",null,l)}const r=s(t,[["render",o],["__file","check-cpu-sh.html.vue"]]);export{r as default};
