import{_ as n,o as s,c as a,e as t}from"./app.a667bd71.js";const p={},e=t(`<p>Spring\u7684\u53C2\u6570\u6821\u9A8C\u4F1A\u7528\u5230\u4E24\u4E2A\u5E93\uFF1Avalidation-api\uFF0Chibernate-validator validation-api\u662F\u4E00\u5957\u6807\u51C6\uFF0Chibernate-validator\u5B9E\u73B0\u4E86\u6B64\u6807\u51C6 JSR-303 \u662FJava EE 6 \u4E2D\u7684\u4E00\u9879\u5B50\u89C4\u8303\uFF0C\u53EB\u505ABeanValidation\uFF0C\u5B98\u65B9\u53C2\u8003\u5B9E\u73B0\u662Fhibernate-validator\u3002 \uFF08JSR-303 \u662F JAVA EE 6 \u4E2D\u7684\u4E00\u9879\u5B50\u89C4\u8303\uFF0C\u53EB\u505A Bean Validation\uFF0C\u5B98\u65B9\u53C2\u8003\u5B9E\u73B0\u662F Hibernate Validator\uFF09 \u5F00\u59CB\u4F7F\u7528validator\uFF0C\u5F15\u5165validator\u7684\u4F9D\u8D56\uFF0C\u975Eweb\u573A\u666F(\u8FD9\u91CC\u5F00\u53D1\u573A\u666F\u4F7F\u7528web\u5F00\u53D1\u573A\u666F\uFF0C\u6240\u4EE5\u6211\u4EEC\u4E0D\u5355\u72EC\u5F15\u5165\u8BE5\u4F9D\u8D56). \u4E3B\u8981\u7684\u6821\u9A8C\u5668\u6709\u4E24\u79CD hibernate-validator spring-boot-starter-validation \u8FD9\u4E24\u79CD\u90FD\u662F\u5BF9JSR303\u7684\u5B9E\u73B0\uFF0C\u800Cspring-boot-starter-validation \u53C8\u662F\u5BF9 hibernate-validator\u7684\u4E8C\u6B21\u5C01\u88C5\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-validation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.1.9.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5E38\u89C4\u53C2\u6570\u6821\u9A8C Spring \u53C2\u6570\u6821\u9A8C\u4F5C\u4E3A spring-context \u6A21\u5757\u7684\u4E00\u90E8\u5206\u5B58\u5728\uFF0CValidator \u662F Spring \u53C2\u6570\u6821\u9A8C\u7684\u6838\u5FC3\u63A5\u53E3\uFF0C\u6211\u4EEC\u5148\u770B\u4E0B\u8FD9\u4E2A\u63A5\u53E3\u3002\u63A5\u53E3\u4E2D\u53EA\u5B58\u5728\u4E24\u4E2A\u65B9\u6CD5\uFF0Csupports \u65B9\u6CD5\u7528\u4E8E\u6821\u9A8C\u524D\u786E\u8BA4\u662F\u5426\u652F\u6301\u7ED9\u5B9A\u7684\u7C7B\u578B\uFF0Cvalidate\u65B9\u6CD5\u7528\u4E8E\u53C2\u6570\u6821\u9A8C\uFF0C\u6BD4\u8F83\u5947\u602A\u7684\u662F\u6821\u9A8C\u7ED3\u679C\u4F7F\u7528\u53C2\u6570\u4E2D\u7684 Errors \u5B58\u50A8\u53CA\u83B7\u53D6\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Validator</span> <span class="token punctuation">{</span>

	<span class="token comment">// \u5F53\u524D\u9A8C\u8BC1\u5668\u662F\u5426\u652F\u6301\u7ED9\u5B9A\u7684\u7C7B\u578B</span>
	<span class="token keyword">boolean</span> <span class="token function">supports</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// \u6821\u9A8C\u7ED9\u5B9A\u7684 target\uFF0C\u63D0\u4F9B\u7684 errors \u5BF9\u8C61\u7528\u4E8E\u5B58\u50A8\u548C\u83B7\u53D6\u9519\u8BEF\u4FE1\u606F</span>
	<span class="token keyword">void</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token class-name">Object</span> target<span class="token punctuation">,</span> <span class="token class-name">Errors</span> errors<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginDTO</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u7528\u6237\u540D\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">App</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Validator</span> validator <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">LocalValidatorFactoryBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LoginDTO</span> loginDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LoginDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Errors</span> errors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanPropertyBindingResult</span><span class="token punctuation">(</span>loginDTO<span class="token punctuation">,</span> <span class="token string">&quot;login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        validator<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>loginDTO<span class="token punctuation">,</span> errors<span class="token punctuation">)</span><span class="token punctuation">;</span>
        errors<span class="token punctuation">.</span><span class="token function">getAllErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">LocalValidatorFactoryBean</span> <span class="token function">localValidatorFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LocalValidatorFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u53C2\u6570\u6821\u9A8C" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u53C2\u6570\u6821\u9A8C" aria-hidden="true">#</a> \u5E38\u7528\u53C2\u6570\u6821\u9A8C</h3><p>\u5BF9\u4E8E\u7B80\u5355\u7C7B\u578B\u53C2\u6570\uFF08\u975EBean\uFF09\uFF0C\u76F4\u63A5\u5728\u53C2\u6570\u524D\uFF0C\u4F7F\u7528\u6CE8\u89E3\u6DFB\u52A0\u7EA6\u675F\u89C4\u5219\u3002\u6CE8\u89E3\u5982\u4E0B\u6240\u793A\uFF1A</p><p>@AssertTrue / @AssertFalse</p><p>\u9A8C\u8BC1\u9002\u7528\u5B57\u6BB5\uFF1Aboolean</p><p>\u6CE8\u89E3\u8BF4\u660E\uFF1A\u9A8C\u8BC1\u503C\u662F\u5426\u4E3Atrue / false</p><p>@DecimalMax / @DecimalMin</p><p>\u9A8C\u8BC1\u9002\u7528\u5B57\u6BB5\uFF1ABigDecimal,BigInteger,String,byte,short,int,long</p><p>\u6CE8\u89E3\u8BF4\u660E\uFF1A\u9A8C\u8BC1\u503C\u662F\u5426\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E\u6307\u5B9A\u7684\u5C0F\u6570\u503C\uFF0C\u8981\u6CE8\u610F\u5C0F\u6570\u5B58\u5728\u7CBE\u5EA6\u95EE\u9898</p><p>@Digits</p><p>\u9A8C\u8BC1\u9002\u7528\u5B57\u6BB5\uFF1ABigDecimal,BigInteger,String,byte,short,int,long</p><p>\u6CE8\u89E3\u8BF4\u660E\uFF1A\u9A8C\u8BC1\u503C\u7684\u6570\u5B57\u6784\u6210\u662F\u5426\u5408\u6CD5</p><p>\u5C5E\u6027\u8BF4\u660E\uFF1Ainteger:\u6307\u5B9A\u6574\u6570\u90E8\u5206\u7684\u6570\u5B57\u7684\u4F4D\u6570\u3002fraction: \u6307\u5B9A\u5C0F\u6570\u90E8\u5206\u7684\u6570\u5B57\u7684\u4F4D\u6570\u3002</p><p>@Future / @Past</p><p>\u9A8C\u8BC1\u9002\u7528\u5B57\u6BB5\uFF1ADate,Calendar</p><p>\u6CE8\u89E3\u8BF4\u660E\uFF1A\u9A8C\u8BC1\u503C\u662F\u5426\u5728\u5F53\u524D\u65F6\u95F4\u4E4B\u540E / \u4E4B\u524D</p><p>\u5C5E\u6027\u8BF4\u660E\uFF1A\u516C\u5171</p><p>@Max / @Min</p><p>\u9A8C\u8BC1\u9002\u7528\u5B57\u6BB5\uFF1ABigDecimal,BigInteger,String,byte,short,int,long</p><p>\u6CE8\u89E3\u8BF4\u660E\uFF1A\u9A8C\u8BC1\u503C\u662F\u5426\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E\u6307\u5B9A\u7684\u6574\u6570\u503C</p><p>\u5C5E\u6027\u8BF4\u660E\uFF1A\u516C\u5171</p><p>\u6CE8\u610F\u4E8B\u9879\uFF1A\u5EFA\u8BAE\u4F7F\u7528\u5728Stirng,Integer\u7C7B\u578B\uFF0C\u4E0D\u5EFA\u8BAE\u4F7F\u7528\u5728int\u7C7B\u578B\u4E0A\uFF0C\u56E0\u4E3A\u8868\u5355\u63D0\u4EA4\u7684\u503C\u4E3A\u201C\u201D\u65F6\u65E0\u6CD5\u8F6C\u6362\u4E3Aint</p><p>@NotNull / @Null</p><p>\u9A8C\u8BC1\u9002\u7528\u5B57\u6BB5\uFF1A\u5F15\u7528\u6570\u636E\u7C7B\u578B</p><p>\u6CE8\u89E3\u8BF4\u660E\uFF1A\u9A8C\u8BC1\u503C\u662F\u5426\u4E3A\u975E\u7A7A / \u7A7A</p><p>\u5C5E\u6027\u8BF4\u660E\uFF1A\u516C\u5171</p><p>@NotBlank \u68C0\u67E5\u7EA6\u675F\u5B57\u7B26\u4E32\u662F\u4E0D\u662FNull\u8FD8\u6709\u88ABTrim\u7684\u957F\u5EA6\u662F\u5426\u5927\u4E8E0,\u53EA\u5BF9\u5B57\u7B26\u4E32,\u4E14\u4F1A\u53BB\u6389\u524D\u540E\u7A7A\u683C.</p><p>@NotEmpty \u68C0\u67E5\u7EA6\u675F\u5143\u7D20\u662F\u5426\u4E3ANull\u6216\u8005\u662FEMPTY.</p><p>@NotBlank \u4E0E @NotEmpty \u7684\u533A\u522B\uFF1A\u7A7A\u683C\uFF08&quot; &quot;\uFF09\u5BF9\u4E8E NotEmpty \u662F\u5408\u6CD5\u7684\uFF0C\u800C NotBlank \u4F1A\u629B\u51FA\u6821\u9A8C\u5F02\u5E38</p><p>@Pattern</p><p>\u9A8C\u8BC1\u9002\u7528\u5B57\u6BB5\uFF1AString</p><p>\u6CE8\u89E3\u8BF4\u660E\uFF1A\u9A8C\u8BC1\u503C\u662F\u5426\u914D\u5907\u6B63\u5219\u8868\u8FBE\u5F0F</p><p>\u5C5E\u6027\u8BF4\u660E\uFF1Aregexp:\u6B63\u5219\u8868\u8FBE\u5F0Fflags: \u6307\u5B9APattern.Flag \u7684\u6570\u7EC4\uFF0C\u8868\u793A\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u76F8\u5173\u9009\u9879\u3002</p><p>@Size</p><p>\u9A8C\u8BC1\u9002\u7528\u5B57\u6BB5\uFF1AString,Collection,Map,\u6570\u7EC4</p><p>\u6CE8\u89E3\u8BF4\u660E\uFF1A\u9A8C\u8BC1\u503C\u662F\u5426\u6EE1\u8DB3\u957F\u5EA6\u8981\u6C42</p><p>\u5C5E\u6027\u8BF4\u660E\uFF1Amax:\u6307\u5B9A\u6700\u5927\u957F\u5EA6\uFF0Cmin:\u6307\u5B9A\u6700\u5C0F\u957F\u5EA6\u3002</p><p>@Length(min=, max=)\uFF1A\u4E13\u95E8\u5E94\u7528\u4E8EString\u7C7B\u578B</p><p>@Valid</p><p>\u9A8C\u8BC1\u9002\u7528\u5B57\u6BB5\uFF1A\u9012\u5F52\u7684\u5BF9\u5173\u8054\u5BF9\u8C61\u8FDB\u884C\u6821\u9A8C</p><p>\u6CE8\u89E3\u8BF4\u660E\uFF1A\u5982\u679C\u5173\u8054\u5BF9\u8C61\u662F\u4E2A\u96C6\u5408\u6216\u8005\u6570\u7EC4,\u90A3\u4E48\u5BF9\u5176\u4E2D\u7684\u5143\u7D20\u8FDB\u884C\u9012\u5F52\u6821\u9A8C,\u5982\u679C\u662F\u4E00\u4E2Amap,\u5219\u5BF9\u5176\u4E2D\u7684\u503C\u90E8\u5206\u8FDB\u884C\u6821\u9A8C(\u662F\u5426\u8FDB\u884C\u9012\u5F52\u9A8C\u8BC1)</p><p>\u5C5E\u6027\u8BF4\u660E\uFF1A\u65E0</p><p>@Range(min=, max=) \u88AB\u6307\u5B9A\u7684\u5143\u7D20\u5FC5\u987B\u5728\u5408\u9002\u7684\u8303\u56F4\u5185</p><p>@CreditCardNumber\u4FE1\u7528\u5361\u9A8C\u8BC1</p><p>@Email \u9A8C\u8BC1\u662F\u5426\u662F\u90AE\u4EF6\u5730\u5740\uFF0C\u5982\u679C\u4E3Anull,\u4E0D\u8FDB\u884C\u9A8C\u8BC1\uFF0C\u7B97\u901A\u8FC7\u9A8C\u8BC1\u3002</p><p>@URL(protocol=,host=, port=,regexp=, flags=)</p><h3 id="\u4F18\u96C5\u7684\u4F7F\u7528\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4F18\u96C5\u7684\u4F7F\u7528\u65B9\u5F0F" aria-hidden="true">#</a> \u4F18\u96C5\u7684\u4F7F\u7528\u65B9\u5F0F</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">Max</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">Min</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">NotEmpty</span></span><span class="token punctuation">;</span>
 
<span class="token doc-comment comment">/**
 * @Author: wangxia
 * @Date: 2021/10/20 16:30
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestPerson</span> <span class="token punctuation">{</span>
 
    <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u7528\u6237\u540D\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>
 
    <span class="token annotation punctuation">@Min</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>message <span class="token operator">=</span> <span class="token string">&quot;\u5E74\u9F84\u4E0D\u80FD\u5C0F\u4E8E0\u5C81&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Max</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">,</span>message <span class="token operator">=</span> <span class="token string">&quot;\u5E74\u9F84\u4E0D\u80FD\u5927\u4E8E150\u5C81&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> username<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

## \u6821\u9A8C
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestValidatController</span> <span class="token punctuation">{</span>
 
    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testValid&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testValid</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Validated</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">TestPerson</span> testPerson<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;\u6D4B\u8BD5\u6210\u529F&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
<span class="token punctuation">}</span>

## \u6355\u83B7\u5F02\u5E38
<span class="token annotation punctuation">@ControllerAdvice</span>
<span class="token annotation punctuation">@ResponseBody</span> 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodArgumentNotValidHandel</span> <span class="token punctuation">{</span>
 
 
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token class-name">MethodArgumentNotValidException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">JSONObject</span> <span class="token class-name">MethodArgumentNotValidHandler</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
                                                    <span class="token class-name">MethodArgumentNotValidException</span> exception<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">JSONObject</span> result<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JSONObject</span> errorMsg<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FieldError</span> error <span class="token operator">:</span> exception<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFieldErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            errorMsg<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>error<span class="token punctuation">.</span><span class="token function">getDefaultMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>errorMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u5B9A\u4E49\u9A8C\u8BC1\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u9A8C\u8BC1\u6CE8\u89E3" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u9A8C\u8BC1\u6CE8\u89E3</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>## \u6CE8\u89E3
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Constraint</span><span class="token punctuation">(</span>validatedBy <span class="token operator">=</span> <span class="token class-name">UserNameConstraintValidator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">PARAMETER</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">UserName</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;username is invalid&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">groups</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Payload</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
## \u6821\u9A8C\u5668
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserNameConstraintValidator</span> <span class="token keyword">implements</span> <span class="token class-name">ConstraintValidator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserName</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Integer</span> min <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token class-name">UserName</span> constraintAnnotation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       min <span class="token operator">=</span> constraintAnnotation<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token class-name">String</span> o<span class="token punctuation">,</span> <span class="token class-name">ConstraintValidatorContext</span> constraintValidatorContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>min <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spring\u603B\u7684\u5168\u5C40\u5F02\u5E38\u53C2\u6570\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#spring\u603B\u7684\u5168\u5C40\u5F02\u5E38\u53C2\u6570\u5904\u7406" aria-hidden="true">#</a> spring\u603B\u7684\u5168\u5C40\u5F02\u5E38\u53C2\u6570\u5904\u7406</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestControllerAdvice</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u5904\u7406\u6807\u6CE8\u4E86 @Validated \u7684\u7C7B\u7684\u65B9\u6CD5\u8C03\u7528\u53C2\u6570\u6821\u9A8C\u5931\u8D25\u5BFC\u81F4\u7684\u5F02\u5E38</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">ConstraintViolationException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleConstraintViolationException</span><span class="token punctuation">(</span><span class="token class-name">ConstraintViolationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getConstraintViolations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">ConstraintViolation</span><span class="token operator">::</span><span class="token function">getMessage</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5904\u7406\u8868\u5355\u7C7B\u578B\u8BF7\u6C42\u666E\u901A\u53C2\u6570\u7F3A\u5931\u5BFC\u81F4\u7684\u5F02\u5E38</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">ServletRequestBindingException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleServletRequestBindingException</span><span class="token punctuation">(</span><span class="token class-name">ServletRequestBindingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5904\u7406\u8868\u5355\u7C7B\u578B\u8BF7\u6C42\u7684\u590D\u6742\u53C2\u6570\u6821\u9A8C\u5931\u8D25\u5BFC\u81F4\u7684\u5F02\u5E38</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">BindException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleBindException</span><span class="token punctuation">(</span><span class="token class-name">BindException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getAllErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">DefaultMessageSourceResolvable</span><span class="token operator">::</span><span class="token function">getDefaultMessage</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5904\u7406 application/json \u7C7B\u578B\u8BF7\u6C42\u7684\u53C2\u6570\u6821\u9A8C\u5931\u8D25\u5BFC\u81F4\u7684\u5F02\u5E38</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">MethodArgumentNotValidException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleMethodArgumentNotValidException</span><span class="token punctuation">(</span><span class="token class-name">MethodArgumentNotValidException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAllErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">DefaultMessageSourceResolvable</span><span class="token operator">::</span><span class="token function">getDefaultMessage</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,55),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","java-validator.html.vue"]]);export{k as default};
