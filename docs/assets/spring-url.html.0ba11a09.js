import{_ as n,o as s,c as a,e as t}from"./app.a667bd71.js";const e={},p=t(`<h3 id="\u5E38\u7528\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u6CE8\u89E3" aria-hidden="true">#</a> \u5E38\u7528\u6CE8\u89E3</h3><p>@RestController \u6CE8\u89E3\u76F8\u5F53\u4E8E@ResponseBody \uFF0B @Controller\u5408\u5728\u4E00\u8D77\u7684\u4F5C\u7528 @Controller\uFF1A \u5728\u7C7B\u4E0A\u6CE8\u89E3\uFF0C\u5219\u6B64\u7C7B\u5C06\u7F16\u7A0B\u4E00\u4E2A\u63A7\u5236\u5668\uFF0C\u5728\u9879\u76EE\u542F\u52A8 Spring \u5C06\u81EA\u52A8\u626B\u63CF\u6B64\u7C7B\uFF0C\u5E76\u8FDB\u884C\u5BF9\u5E94URL\u8DEF\u7531\u6620\u5C04\u3002 @RequestMapping \u6307\u5B9AURL\u6620\u5C04\u8DEF\u5F84\uFF0C\u5982\u679C\u5728\u63A7\u5236\u5668\u4E0A\u914D\u7F6E RequestMapping \uFF0C\u5177\u4F53\u8BF7\u6C42\u65B9\u6CD5\u4E5F\u914D\u7F6E\u8DEF\u5F84\u5219\u6620\u5C04\u7684\u8DEF\u5F84\u4E3A @ResponseBody \u5C06\u6CE8\u89E3\u65B9\u6CD5\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32\u76F4\u63A5\u8FD4\u56DE @RequestParam (required\u9ED8\u8BA4\u4E3Atrue) \u81EA\u52A8\u6620\u5C04URL\u5BF9\u5E94\u7684\u53C2\u6570\u5230Action\u4E0A\u9762\u7684\u6570\u503C\uFF0CRequestParam \u9ED8\u8BA4\u4E3A\u5FC5\u586B\u53C2\u6570\u3002 @PathVariable \u4ECEurl\u53C2\u6570\u62FF\u503C @RequestHeader (required\u9ED8\u8BA4\u4E3Atrue) \u4ECEhttp\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6\u503C @CookieValue (required\u9ED8\u8BA4\u4E3Atrue) \u4ECEcookie\u4E2D\u83B7\u53D6\u503C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/springmvc&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Controller</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringMVCTest</span> <span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SUCCESS</span> <span class="token operator">=</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
	
  <span class="token comment">/*
	 * REST\u98CE\u683C\u7684URL \u4EE5CRUD\u4E3A\u4F8B\uFF1A 
	 * \u65B0\u589E\uFF1A/order POST 
	 * \u4FEE\u6539\uFF1A/order/1 PUT 
	 * update?id=1
	 * \u83B7\u53D6\uFF1A/order/1 GET get?id=1 
	 * \u5220\u9664\uFF1A/order/1 DELETE delete?id=1
	 * 
	 * \u5982\u4F55\u53D1\u9001PUT\u8BF7\u6C42\u548CDELETE\u8BF7\u6C42\uFF1F 
	 * 1.\u9700\u8981\u914D\u7F6EHiddenHttpMethodFilter 
	 * 2.\u9700\u8981\u53D1\u9001POST\u8BF7\u6C42
	 * 3.\u9700\u8981\u5728\u53D1\u9001POST\u8BF7\u6C42\u65F6\u643A\u5E26\u4E00\u4E2Aname=&quot;_method&quot;\u7684\u9690\u85CF\u57DF\uFF0C\u503C\u4E3ADELETE\uFF0C\u6216PUT
	 * 
	 * \u5728SpringMVC\u7684\u76EE\u6807\u65B9\u6CD5\u4E2D\u5982\u4F55\u83B7\u5F97id\uFF1F \u4F7F\u7528@PathVariable\u6CE8\u89E3
	 */</span>
	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/testRest/{id}&quot;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testRest</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testRest id:&quot;</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/testRest/{id}-{kid}&quot;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testRest1</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;kid&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> kid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testRest id:&quot;</span> <span class="token operator">+</span> id<span class="token operator">+</span><span class="token string">&quot;:kid=&quot;</span><span class="token operator">+</span>kid<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/*
	 * @RequestParam \u6765\u6620\u5C04\u8BF7\u6C42\u53C2\u6570 value \u503C\u5373\u8BF7\u6C42\u53C2\u6570\u7684\u53C2\u6570\u540D required \u8BE5\u53C2\u6570\u662F\u5426\u5FC5\u987B\uFF0C\u9ED8\u8BA4\u4E3Atrue
	 * defaultValue \u8BF7\u6C42\u53C2\u6570\u7684\u9ED8\u8BA4\u503C
	 */</span>
	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/testRequestParam&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testRequestParam</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span>
			<span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testRequestParam,user:&quot;</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">&quot;;age:&quot;</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/*
	 * \u6620\u5C04\u8BF7\u6C42\u5934\u4FE1\u606F \u7528\u6CD5\u548C@requestParam\u76F8\u540C
	 */</span>
	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testRequestHeader&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testRequestHeader</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Accept-Language&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> al<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testRequestHeader,Accept-Language:&quot;</span> <span class="token operator">+</span> al<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/*
	 * \u8BF7\u6C42Cookie\u7684\u4FE1\u606F \u7528\u6CD5\u548C@RequestParam\u76F8\u540C
	 * \u6BCF\u4E2Acookie\u5728\u521B\u5EFA\u7684\u65F6\u5019\u90FD\u4F1A\u6709\u4E00\u4E2A\u72EC\u4E00\u65E0\u4E8C\u7684JSESSIONID
	 */</span>
	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testCookieValue&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testCookieValue</span><span class="token punctuation">(</span><span class="token annotation punctuation">@CookieValue</span><span class="token punctuation">(</span><span class="token string">&quot;JSESSIONID&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testCookieValue,JSESSionId:&quot;</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/*
	 * SpringMvc\u4F1A\u6309\u53C2\u6570\u540D\u548CPojo\u5C5E\u6027\u540D\u8FDB\u884C\u5339\u914D\uFF0C\u81EA\u52A8\u4E3A\u8BE5\u5BF9\u8C61\u586B\u5145\u5C5E\u6027\u503C\uFF0C\u652F\u6301\u7EA7\u8054\u5C5E\u6027\uFF0C\u5982dept.deptid\u3001dept.
	 * deptaddress.tel\u7B49
	 */</span>
	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testPojo&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testPojo</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Test Pojo:&quot;</span> <span class="token operator">+</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/*
	 * \u53EF\u4EE5\u4F7F\u7528\u539F\u751F\u7684ServletAPI\u4F5C\u4E3A\u76EE\u6807\u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u5177\u4F53\u652F\u6301\u4EE5\u4E0B\u7C7B\u578B HttpServletRequest
	 * HttpServletResponse HttpSession java.security.Principal Locale
	 * InputStream OutputStream Reader Writer
	 */</span>
	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testServletAPI&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testServletAPI</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Writer</span> out<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testServletAPI,request:&quot;</span> <span class="token operator">+</span> request <span class="token operator">+</span> <span class="token string">&quot;,response:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
		out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;Hello SpringMVC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","spring-url.html.vue"]]);export{r as default};
