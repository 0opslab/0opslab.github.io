import{_ as s,o as a,c as n,e}from"./app.a667bd71.js";const p={},t=e(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token comment">#\`\`\`ops</span>
<span class="token comment">#title:\u83B7\u53D6linux\u7684\u5185\u5B58\u4FE1\u606F</span>
<span class="token comment">#descr:</span>
<span class="token comment">#\`\`\`</span>
<span class="token assign-left variable">os</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">uname</span><span class="token variable">\`</span></span>
<span class="token assign-left variable">mem</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$os</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;linux&quot;</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$os</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;Linux&quot;</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
  <span class="token function">which</span> sar <span class="token operator">&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span>
  <span class="token keyword">then</span>
    <span class="token function">which</span> <span class="token function">free</span> <span class="token operator">&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span>
    <span class="token keyword">then</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot;error_text=&#39;sar&#39;and &#39;free&#39; commands not found!&quot;</span>
      <span class="token builtin class-name">exit</span>
    <span class="token keyword">else</span>
      <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> <span class="token operator">|</span> <span class="token function">grep</span> Mem: <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $2 }&#39;</span><span class="token variable">\`</span></span>
      <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> <span class="token operator">|</span> <span class="token function">grep</span> Mem: <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $3 }&#39;</span><span class="token variable">\`</span></span>
      <span class="token assign-left variable">mem</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print ((c1*100)/c2) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$used <span class="token assign-left variable">c2</span><span class="token operator">=</span>$total<span class="token variable">\`</span></span>
    <span class="token keyword">fi</span>
  <span class="token keyword">else</span> 
    sar <span class="token parameter variable">-r</span> <span class="token number">1</span> <span class="token number">3</span> <span class="token operator">&gt;</span> sar_memory_out <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
    <span class="token function">cat</span> sar_memory_out <span class="token operator">|</span> <span class="token function">grep</span> Average <span class="token operator">&gt;</span> memory_temp
    <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">sed</span> <span class="token parameter variable">-n</span> 1p memory_temp <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $3 }&#39;</span><span class="token variable">\`</span></span>
    <span class="token assign-left variable">free</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">sed</span> <span class="token parameter variable">-n</span> 1p memory_temp <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $2 }&#39;</span><span class="token variable">\`</span></span>
    <span class="token assign-left variable">mem</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">sed</span> <span class="token parameter variable">-n</span> 1p memory_temp <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{ print $4 }&#39;</span><span class="token variable">\`</span></span>

    <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print (c1+c2)}&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$used <span class="token assign-left variable">c2</span><span class="token operator">=</span>$free<span class="token variable">\`</span></span>
  <span class="token keyword">fi</span>

<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$os</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;SunOS&quot;</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
<span class="token assign-left variable">vmexec</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">which</span> <span class="token function">vmstat</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">\`</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$vmexec</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;no&quot;</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;error_text=vmstat command not found!&quot;</span>
    <span class="token builtin class-name">exit</span> <span class="token number">0</span>
  <span class="token keyword">fi</span>
  <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>prtconf <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;Mem&quot;</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $3}&#39;</span><span class="token variable">\`</span></span>
  <span class="token assign-left variable">t</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $total <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">\`</span></span>
  <span class="token assign-left variable">total_kb</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print (c1*1024) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$t<span class="token variable">\`</span></span>

  <span class="token assign-left variable">vmstat_output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>/bin/vmstat <span class="token number">1</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-1</span><span class="token variable">\`</span></span>
  <span class="token assign-left variable">free</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $vmstat_output <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $5;}&#39;</span><span class="token variable">\`</span></span>

  <span class="token assign-left variable">used_kb</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print (c1-c2) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$total_kb <span class="token assign-left variable">c2</span><span class="token operator">=</span>$free<span class="token variable">\`</span></span>
  <span class="token assign-left variable">used_pg</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print (c1-c2*4) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$total_kb <span class="token assign-left variable">c2</span><span class="token operator">=</span>$free<span class="token variable">\`</span></span>

  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$used_kb</span> <span class="token parameter variable">-gt</span> <span class="token variable">$t</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">[</span> <span class="token variable">$used_pg</span> <span class="token parameter variable">-gt</span> <span class="token number">0</span> <span class="token punctuation">]</span> 
  <span class="token keyword">then</span>
    <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable">$used_pg</span> 
  <span class="token keyword">else</span>
    <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable">$used_kb</span>
  <span class="token keyword">fi</span>
  <span class="token assign-left variable">mem</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print ((c1*100)/c2) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$used <span class="token assign-left variable">c2</span><span class="token operator">=</span>$total_kb<span class="token variable">\`</span></span>

  <span class="token comment"># change unit into KB</span>
  <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable">$total_kb</span>

<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$os</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;AIX&quot;</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
  <span class="token assign-left variable">svmon_out</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>svmon <span class="token parameter variable">-G</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-i</span> memory<span class="token variable">\`</span></span>
  <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $svmon_out <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print ($2 * 4)}&#39;</span><span class="token variable">\`</span></span>
  <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $svmon_out <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print ($3 * 4)}&#39;</span><span class="token variable">\`</span></span>
  <span class="token assign-left variable">mem</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{printf(&quot;%0.2f&quot;,((c1*100)/c2)) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$used <span class="token assign-left variable">c2</span><span class="token operator">=</span>$total<span class="token variable">\`</span></span>

<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$os</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;HP-UX&quot;</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
<span class="token assign-left variable">vmexec</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">which</span> <span class="token function">vmstat</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">\`</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$vmexec</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;no&quot;</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;error_text=vmstat command not found!&quot;</span>
    <span class="token builtin class-name">exit</span> <span class="token number">0</span>
  <span class="token keyword">fi</span>
  <span class="token assign-left variable">DMESG</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>/sbin/dmesg <span class="token operator">|</span> /usr/bin/grep <span class="token string">&#39;Physical.*lockable.*available&#39;</span><span class="token variable">\`</span></span>
  <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">{</span>DMESG<span class="token punctuation">}</span> <span class="token operator">|</span> /usr/bin/awk <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">\`</span></span>

  <span class="token assign-left variable">VMSTAT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>$vmexec <span class="token number">1</span> <span class="token number">2</span> <span class="token operator">|</span> /usr/bin/tail <span class="token parameter variable">-1</span><span class="token variable">\`</span></span>

  <span class="token assign-left variable">free</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $VMSTAT <span class="token operator">|</span> /usr/bin/awk <span class="token string">&#39;{print $5;}&#39;</span><span class="token variable">\`</span></span>
  <span class="token assign-left variable">free</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>/usr/bin/expr $free <span class="token punctuation">\\</span>* <span class="token number">4</span><span class="token variable">\`</span></span>

  <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">expr</span> $total <span class="token punctuation">\\</span>- $free<span class="token variable">\`</span></span>
  <span class="token assign-left variable">mem</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">expr</span> $used <span class="token punctuation">\\</span>* <span class="token number">100</span> / $total<span class="token variable">\`</span></span>

<span class="token keyword">else</span>
<span class="token assign-left variable">vmexec</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">which</span> <span class="token function">vmstat</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">\`</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$vmexec</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;no&quot;</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;error_text=vmstat command not found!&quot;</span>
    <span class="token builtin class-name">exit</span> <span class="token number">0</span>
  <span class="token keyword">fi</span>
  <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>prtconf <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;Mem&quot;</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $3}&#39;</span><span class="token variable">\`</span></span>
  <span class="token assign-left variable">vmstat_output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>/bin/vmstat <span class="token number">1</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-1</span><span class="token variable">\`</span></span>
  <span class="token assign-left variable">free</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $vmstat_output <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $5;}&#39;</span><span class="token variable">\`</span></span>
  <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print (c1*1024) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$total<span class="token variable">\`</span></span>
  <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print (c1-c2) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$total <span class="token assign-left variable">c2</span><span class="token operator">=</span>$free<span class="token variable">\`</span></span>
  <span class="token assign-left variable">mem</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print ((c1*100)/c2) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$used <span class="token assign-left variable">c2</span><span class="token operator">=</span>$total<span class="token variable">\`</span></span>
<span class="token keyword">fi</span>
<span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{printf (&quot;%.0f&quot;, c1/1024) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$total <span class="token variable">\`</span></span>
<span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{printf (&quot;%.0f&quot;, c1/1024) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$used<span class="token variable">\`</span></span>
<span class="token assign-left variable">mem</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{printf (&quot;%.0f&quot;, c1) }&#39;</span> <span class="token assign-left variable">c1</span><span class="token operator">=</span>$mem<span class="token variable">\`</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Used Memory=<span class="token variable">\${used}</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Free Memory=<span class="token variable">\${free}</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Total Memory=<span class="token variable">\${total}</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Memory Utilization=<span class="token variable">$mem</span>&quot;</span>

<span class="token builtin class-name">exit</span> <span class="token number">0</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),l=[t];function o(i,c){return a(),n("div",null,l)}const k=s(p,[["render",o],["__file","memory-sh.html.vue"]]);export{k as default};
