import{_ as s,o as n,c as a,e}from"./app.a667bd71.js";const p={},t=e(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#\`\`\`ops</span>
<span class="token comment">#title:\u67E5CPU\u4F7F\u7528\u7387\u6BD4\u8F83\u9AD8\u7684\u7EBF\u7A0B</span>
<span class="token comment">#descr:</span>
<span class="token comment">#\`\`\`</span>
<span class="token comment">#</span>
<span class="token comment">#bash cpu_usage_rate.sh </span>
<span class="token comment">#Mon Mar 16 09:24:39 CST 2020</span>
<span class="token comment"># 8.6 32060 32060 32036 stress</span>
<span class="token comment"># 8.4 32055 32055 32036 stress</span>
<span class="token comment"># 8.4 32053 32053 32036 stress</span>

<span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>C
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/sbin:/usr/sbin:/bin:/usr/bin
<span class="token assign-left variable">interval</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">length</span><span class="token operator">=</span><span class="token number">86400</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> <span class="token number">1</span> <span class="token punctuation">$(</span>expr $<span class="token punctuation">{</span>length<span class="token punctuation">}</span> / $<span class="token punctuation">{</span>interval<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token keyword">do</span>
<span class="token function">date</span>
<span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>C <span class="token function">ps</span> <span class="token parameter variable">-eT</span> -o%cpu,pid,tid,ppid,comm <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> CPU <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-n</span> <span class="token parameter variable">-r</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-20</span>
<span class="token function">date</span>
<span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>C <span class="token function">cat</span> /proc/loadavg
<span class="token punctuation">{</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>C <span class="token function">ps</span> <span class="token parameter variable">-eT</span> -o%cpu,pid,tid,ppid,comm <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/^ *//&#39;</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-s</span> <span class="token string">&#39; &#39;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> CPU <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-n</span> <span class="token parameter variable">-r</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-d</span> <span class="token string">&#39; &#39;</span> <span class="token parameter variable">-f</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token function">xargs</span> -I<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;{} + &quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39; 0&#39;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token function">bc</span> <span class="token parameter variable">-l</span>
<span class="token function">sleep</span> <span class="token variable">\${interval}</span>
<span class="token keyword">done</span>
<span class="token comment">#fuser -k $0</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),o=[t];function l(c,i){return n(),a("div",null,o)}const k=s(p,[["render",l],["__file","cpu-usage-rate-sh.html.vue"]]);export{k as default};
